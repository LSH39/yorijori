<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="notice">
	<select id="noticeList" parameterType="map" resultType="n">
		select *
  		from
	  	(select 
	  		rownum as rnum,
	  		n.*
	  	from
		  	(select
		  		notice_no as noticeNo,
		  		notice_title as noticeTitle,
		  		notice_writer as noticeWriter,
		  		notice_priority as noticePriority,
		  		reg_date as regDate,
		  		notice_readcount as noticeReadcount
		  	from notice order by noticePriority desc, notice_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="totalCount" resultType="_int">
		select count(*) from notice
	</select>
	<select id="selectOneNotice" parameterType="_int" resultType="n">
		select
			notice_no as noticeNo,
			notice_title as noticeTitle,
			notice_Writer as noticeWriter,
			notice_Content as noticeContent,
			reg_date as regDate,
			notice_readcount as noticeReadcount,
			filename as filename,
			filepath as filepath
		from notice
		where notice_no=#{noticeNo}
	</select>
	<delete id="deleteNotice" parameterType="_int">
		delete 
		from notice where notice_no=#{noticeNo}
	</delete>
	<insert id="insertNotice" parameterType="n">
		insert into notice values (notice_seq.nextval, #{noticeWriter}, #{noticeTitle}, #{noticeContent}, #{noticePriority}, to_char(sysdate, 'yyyy-mm-dd'), 0, #{filename}, #{filepath})
	</insert>
	<update id="rcUpdate" parameterType="_int">
		update notice set notice_readcount = notice_readcount + 1
		where notice_no = #{noticeNo}
	</update>
	<select id="selectPrevNo" parameterType="_int" resultType="_int">
		select N.PREVNO 
    	from
    	(select notice_no as noticeNo,
		  		notice_title as noticeTitle,
		  		notice_writer as noticeWriter,
		  		notice_priority as noticePriority,
		  		reg_date as regDate,
		  		notice_readcount as noticeReadcount,
                LAG(NOTICE_NO, 1, -1) OVER(ORDER BY NOTICE_PRIORITY DESC, NOTICE_NO DESC) AS PREVNO,
                LEAD(NOTICE_NO, 1, -1) OVER(ORDER BY NOTICE_PRIORITY DESC, NOTICE_NO DESC) AS NEXTNO
    	from NOTICE)N
        WHERE N.NOTICENO= #{noticeNo}	
	</select>
	<select id="selectNextNo" parameterType="_int" resultType="_int">
		select N.NEXTNO 
    	from
    	(select notice_no as noticeNo,
		  		notice_title as noticeTitle,
		  		notice_writer as noticeWriter,
		  		notice_priority as noticePriority,
		  		reg_date as regDate,
		  		notice_readcount as noticeReadcount,
                LAG(NOTICE_NO, 1, -1) OVER(ORDER BY NOTICE_PRIORITY DESC, NOTICE_NO DESC) AS PREVNO,
                LEAD(NOTICE_NO, 1, -1) OVER(ORDER BY NOTICE_PRIORITY DESC, NOTICE_NO DESC) AS NEXTNO
    	from NOTICE)N
        WHERE N.NOTICENO= #{noticeNo}
	</select>
	<select id="searchList" parameterType="map" resultType="n">
		select *
  		from
	  	(select 
	  		rownum as rnum,
	  		n.*
	  	from
		  	(select
		  		notice_no as noticeNo,
		  		notice_title as noticeTitle,
		  		notice_writer as noticeWriter,
		  		notice_priority as noticePriority,
		  		notice_content as noticeContent,
		  		reg_date as regDate,
		  		notice_readcount as noticeReadcount,
                (select member_nickname from member where member_id=notice_writer) as memberNickname    
		  	from notice 
            order by noticePriority desc, notice_no desc)n)
		where rnum between #{start} and #{end}
        <choose>
           <when test="searchtype.equals('writerNickname')"> 
        and memberNickname like '%' || #{searchword} || '%'
            </when>
            <when test="searchtype.equals('writerId')">
        and noticeWriter like '%' || #{searchword} || '%'
            </when>
            <when test="searchtype.equals('title')">
        and noticeTitle like '%' || #{searchword} || '%'
            </when>
            <when test="searchtype.equals('content')">
        and noticeContent like '%' || #{searchword} || '%'
            </when>
        </choose>
	</select>
	<select id="searchCount" parameterType="map" resultType="_int">
		select count(*) from
		(select
		  		notice_no as noticeNo,
		  		notice_title as noticeTitle,
		  		notice_writer as noticeWriter,
		  		notice_content as noticeContent,
		  		notice_priority as noticePriority,
		  		reg_date as regDate,
		  		notice_readcount as noticeReadcount,
                (select member_nickname from member where member_id=notice_writer) as memberNickname    
		  	from notice
		  <choose>
           <when test="searchtype.equals('writerNickname')"> 
        )n where memberNickname like '%' || #{searchword} || '%'
            </when>
            <when test="searchtype.equals('writerId')">
        where notice_writer like '%' || #{searchword} || '%')n
            </when>
            <when test="searchtype.equals('title')">
        where notice_title like '%' || #{searchword} || '%')n
            </when>
            <when test="searchtype.equals('content')">
        where notice_content like '%' || #{searchword} || '%')n
            </when>
        </choose>
	</select>
	<update id="updateNotice" parameterType="n">
		update notice
		set notice_title = #{noticeTitle},
		notice_content = #{noticeContent},
		notice_priority = #{noticePriority},
		filename = #{filename},
		filepath = #{filepath}
		where notice_no = #{noticeNo}
	</update>
</mapper>
