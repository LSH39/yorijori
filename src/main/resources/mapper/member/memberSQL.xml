<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="selectAllMember"  resultType="m2">
	select member_no as memberNo,
member_id as memberId,
member_pw as memberPw,
member_email as memberEmail,
member_name as memberName,
member_nickname as memberNickname,
member_phone as memberPhone,
member_birth as memberBirth,
postcode,
address_road as addressRoad,
address_detail as addressDetail,
member_consent as memberConsent,
profile_path as profilePath,
profile_intro as profileIntro,
certificate_path as certificatePath,
member_level as memberLevel,
member_point as memberPoint,
enroll_date as enrollDate,
withdraw_date as withdrawDate,
member_black as memberBlack,
(select count(*) from freeboard where free_writer = member_id)freeCount,
(select count(*) from recipe_board where recipe_writer = member_no)recipeCount,
(select count(*) from freeboard_comment where fc_writer = member_id)fcCount

from member where memberBlack = 0
	</select>
	<select id="selectTotalCount" resultType="_int">
	select count(*) from (select member_no as memberNo,
member_id as memberId,
member_pw as memberPw,
member_email as memberEmail,
member_name as memberName,
member_nickname as memberNickname,
member_phone as memberPhone,
member_birth as memberBirth,
postcode,
address_road as addressRoad,
address_detail as addressDetail,
member_consent as memberConsent,
profile_path as profilePath,
profile_intro as profileIntro,
certificate_path as certificatePath,
member_level as memberLevel,
member_point as memberPoint,
enroll_date as enrollDate,
withdraw_date as withdrawDate,
member_black as memberBlack,
(select count(*) from freeboard where free_writer = member_id)boardCount,
(select count(*) from recipe_board where recipe_writer = member_no)recipeCount,
(select count(*) from freeboard_comment where fc_writer = member_id)fcCount

from member order by enrollDate desc) where memberBlack = #{level}

<if test="detail==1">


and ${searchType} like '%'||#{searchText}||'%'


</if>
<if test="detail==2">
and
<choose>
<when test="searchDetail ==1">
boardCount


</when>
<when test="searchDetail ==2">
recipeCount

</when>
<when test="searchDetail ==3">
fcCount

</when>
<when test="searchDetail ==4">
enrollDate
between #{joinStart} and #{joinEnd}

</when>

</choose>


<choose>
<when test="moreless ==1">
<![CDATA[>]]>= #{searchText2}

</when>
<when test="moreless ==2">
<![CDATA[<]]>= #{searchText2}

</when>

</choose>

</if>

<choose>
<when test="memberLevel ==0">
and (memberLevel =1 or memberLevel =2)

</when>
<when test="memberLevel ==1">
and memberLevel =1 

</when>
<when test="memberLevel ==2">
and memberLevel =2

</when>
<when test="memberLevel==4">
and memberLevel = 4
</when>
<when test="memberLevel==5">
and memberLevel = 5
</when>

</choose>


	</select>

	<select id="selectOneMember" parameterType="hashmap" resultType="m2">
	select * from (select member_no as memberNo,
member_id as memberId,
member_pw as memberPw,
member_email as memberEmail,
member_name as memberName,
member_nickname as memberNickname,
member_phone as memberPhone,
member_birth as memberBirth,
postcode,
address_road as addressRoad,
address_detail as addressDetail,
member_consent as memberConsent,
profile_path as profilePath,
profile_intro as profileIntro,
certificate_path as certificatePath,
member_level as memberLevel,
member_point as memberPoint,
enroll_date as enrollDate,
withdraw_date as withdrawDate,
member_black as memberBlack,
(select count(*) from freeboard where free_writer = member_id)boardCount,
(select count(*) from recipe_board where recipe_writer = member_no)recipeCount,
(select count(*) from freeboard_comment where fc_writer = member_id)fcCount

from member) where ${searchType} like '%'||#{searchText}||'%'

	</select>
	<select id="selectDetailMember" parameterType="hashmap" resultType="m2">
	select * from ( select rownum as rnum, memberNo,memberId,memberPw,memberEmail,memberName,memberNickname,
memberPhone,memberBirth,
postcode,addressRoad,addressDetail,memberConsent,profilePath,profileIntro,
certificatePath,memberLevel,memberPoint,enrollDate,withdrawDate,memberBlack, boardCount,recipeCount, fcCount from (select member_no as memberNo,
member_id as memberId,
member_pw as memberPw,
member_email as memberEmail,
member_name as memberName,
member_nickname as memberNickname,
member_phone as memberPhone,
member_birth as memberBirth,
postcode,
address_road as addressRoad,
address_detail as addressDetail,
member_consent as memberConsent,
profile_path as profilePath,
profile_intro as profileIntro,
certificate_path as certificatePath,
member_level as memberLevel,
member_point as memberPoint,
enroll_date as enrollDate,
withdraw_date as withdrawDate,
member_black as memberBlack,
(select count(*) from freeboard where free_writer = member_id)boardCount,
(select count(*) from recipe_board where recipe_writer = member_no)recipeCount,
(select count(*) from freeboard_comment where fc_writer = member_id)fcCount

from member order by enrollDate desc) where memberBlack = #{level}

<if test="detail==1">


and ${searchType} like '%'||#{searchText}||'%'


</if>
<if test="detail==2">
and
<choose>
<when test="searchDetail ==1">
boardCount


</when>
<when test="searchDetail ==2">
recipeCount

</when>
<when test="searchDetail ==3">
fcCount

</when>
<when test="searchDetail ==4">
enrollDate
between #{joinStart} and #{joinEnd}

</when>

</choose>


<choose>
<when test="moreless ==1">
<![CDATA[>=]]> #{searchText2}

</when>
<when test="moreless ==2">
<![CDATA[<=]]> #{searchText2}

</when>

</choose>

</if>

<choose>
<when test="memberLevel ==0">
and memberLevel in (1,2)

</when>
<when test="memberLevel ==1">
and memberLevel =1 

</when>
<when test="memberLevel ==2">
and memberLevel =2

</when>
<when test="memberLevel==4">
and memberLevel = 4
</when>
<when test="memberLevel==5">
and memberLevel = 5
</when>

</choose>
) where rnum between #{start2} and #{end2}

	</select>
	
	
	
	
	<update id="addBlackMember" parameterType="string" >
	update member set member_black = 1 where member_no in 
	<foreach collection="array" item="memberNo" open="(" close=")" separator=",">#{memberNo}</foreach>
	
	</update>
		<update id="addNormalMember" parameterType="string" >
	update member set 
	member_black = 0
	
	 where member_no in 
	<foreach collection="array" item="memberNo" open="(" close=")" separator=",">#{memberNo}</foreach>
	
	</update>
	<delete id="deleteMember" parameterType="string" >
	delete from member where member_no in 
	<foreach collection="array" item="memberNo" open="(" close=")" separator=",">#{memberNo}</foreach>
	
	</delete>
	<update id="addJori" parameterType="string" >
	update member set 
	member_level = 2
	
	 where member_no in 
	<foreach collection="array" item="memberNo" open="(" close=")" separator=",">#{memberNo}</foreach>
	
	</update>
	<update id="pointReset" parameterType="string">
	update member set member_point = 0 where member_no = #{memberNo}
	</update>





	
	<!-- 성승민 프로필 연동 위해 추가 -->
	<select id="selectOneProfile"  parameterType="string" resultType="m">
		select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_email as memberEmail,
			member_name as memberName,
			member_nickname as memberNickname,
			member_phone as memberPhone,
			member_birth as memberBirth,
			postcode,
			address_road as addressRoad,
			address_detail as addressDetail,
			member_consent as memberConsent,
			profile_path as profilePath,
			profile_intro as profileIntro,
			certificate_path as certificatePath,
			member_level as memberLevel,
			member_point as memberPoint,
			enroll_date as enrollDate,
			withdraw_date as withdrawDate,
			member_black as memberBlack
		from member
		where member_id=#{memberId}
	</select>
	
	

	<!-- LSH -->
	<select id="loginMember"  parameterType="m" resultType="m">
		select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_email as memberEmail,
			member_name as memberName,
			member_nickname as memberNickname,
			member_phone as memberPhone,
			member_birth as memberBirth,
			postcode,
			address_road as addressRoad,
			address_detail as addressDetail,
			member_consent as memberConsent,
			profile_path as profilePath,
			profile_intro as profileIntro,
			certificate_path as certificatePath,
			member_level as memberLevel,
			member_point as memberPoint,
			enroll_date as enrollDate,
			withdraw_date as withdrawDate,
			member_black as memberBlack
		from member
		where member_id=#{memberId} and member_pw=#{memberPw}
	</select>
	
	<insert id="joinAdmin" parameterType="m">
		insert into member values(member_seq.nextval,#{memberId},#{memberPw},#{memberEmail},#{memberName},#{memberNickname},#{memberPhone},'1900-01-01','00000','admin','admin',0,'profile_admin.png','admin',null,3,0,to_char(sysdate,'yyyy-mm-dd'),null,0)
	</insert>
	<insert id="joinBasic" parameterType="m">
		insert into member values(member_seq.nextval,#{memberId},#{memberPw},#{memberEmail},#{memberName},#{memberNickname},#{memberPhone},#{memberBirth},#{postcode},#{addressRoad},#{addressDetail},#{memberConsent},'profile_basic.png',null,null,1,0,to_char(sysdate,'yyyy-mm-dd'),null,0)
		<selectKey resultType="_int" order="AFTER" keyProperty="memberNo">
			select member_no from member where member_id=#{memberId}
		</selectKey>
	</insert>
	<insert id="joinPro" parameterType="m">
		insert into member values(member_seq.nextval,#{memberId},#{memberPw},#{memberEmail},#{memberName},#{memberNickname},#{memberPhone},#{memberBirth},#{postcode},#{addressRoad},#{addressDetail},#{memberConsent},'profile_basic.png',null,#{certificatePath},2,0,to_char(sysdate,'yyyy-mm-dd'),null,0)
		<selectKey resultType="_int" order="AFTER" keyProperty="memberNo">
			select member_no from member where member_id=#{memberId}
		</selectKey>
	</insert>
	
	<insert id="joinCoupon" parameterType="m">
		insert into coupon_list values(coupon_list_seq.nextval,#{memberNo},1,0,null)
	</insert>
	
	<select id="joinSearch" parameterType="m" resultType="String">
		select member_no as memberNo
		from member
		<choose>
			<when test="memberId!=null">
				where member_id=#{memberId}
			</when>
			<when test="memberEmail!=null">
				where member_email=#{memberEmail}
			</when>
			<when test="memberNickname!=null">
				where member_nickname=#{memberNickname}
			</when>
			<when test="memberPhone!=null">
				where member_phone=#{memberPhone}
			</when>
		</choose>
	</select>
	
	<select id="findIdPw" parameterType="m" resultType="m">
		select member_no as memberNo,
				member_id as memberId
		from member
		<choose>
			<when test="memberName!=null">
				where member_name=#{memberName} and member_email=#{memberEmail}
			</when>
			<when test="memberId!=null">
				where member_id=#{memberId} and member_email=#{memberEmail}
			</when>
		</choose>
	</select>
	<update id="findPwRe" parameterType="m">
		update member set member_pw=#{memberPw} where member_no=#{memberNo}
	</update>

</mapper>
