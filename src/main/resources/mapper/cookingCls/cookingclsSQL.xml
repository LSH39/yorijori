<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cookingcls">
	
	<!-- 쿠킹클래스 전체 조회 -->
	<!--  
	<select id="selectClassList" parameterType="map"  resultType="ccls">
		select *
		from
		(select 
			rownum as rnum,
			c.*
		from
		(select
			class_no as classNo,
			member_nickname as memberNickname,
			class_title as classTitle,
			class_price as classPrice,
			class_rate as classRate,
			class_start as classStart,
			class_thumbnail_filename as classThumbNailFilename,
			class_thumbnail_filepath as classThumbNailFilepath
		from cooking_class order by class_no desc) c
		)
		where rnum between #{start} and #{end}
	</select>
	-->
	<select id="selectClassList" parameterType="map"  resultType="ccls">
		select *
		from
		(select 
			rownum as rnum,
			c.*
		from
		(select
			class_no as classNo,
			member_nickname as memberNickname,
			class_title as classTitle,
			class_price as classPrice,
			class_rate as classRate,
			class_start as classStart,
			class_thumbnail_filename as classThumbNailFilename,
			class_thumbnail_filepath as classThumbNailFilepath
		from cooking_class 
        where class_status=1 or (class_status=4 and class_location1 is null)
        order by class_no desc) c )
		where rnum between #{start} and #{end}
	</select>
	
	<!-- 전체 페이지 수 -->
	<select id="totalCount" resultType="_int">
		select count(*) from cooking_class
	</select>
	
	<!-- 쿠킹클래스 조회 -->
	<select id="selectOneClass" parameterType="_int" resultType="ccls">
		select 
			class_no as classNo,
			class_title as classTitle,
			member_nickname as memberNickname,
			class_content as ClassContent,
			class_start as classStart,
			class_end as classEnd,
			class_price as classPrice,
			class_rate as classRate,
			class_nop as classNop,
			class_curr_nop as classCurrNop,
			class_status as classStatus,
			class_reg_date as classRegDate,
			class_start_time as classStartTime,
			class_end_time as classEndTime,
			class_location1 as classLocation1,
			class_location2 as classLocation2,
			class_thumbnail_filename as classThumbNailFilename,
			class_thumbnail_filepath as classThumbNailFilepath
		from cooking_class 
		where class_no=#{classNo}
	</select>
	
	<!-- 쿠킹 클래스 삭제 -->
	<delete id="deleteOneClass" parameterType="_int">
		delete from cooking_class where class_No=#{classNo}
	</delete>
	
	<!-- 쿠킹 클래스 현재 인원수 -->
	<select id="selectCurrClsCnt" parameterType="_int" resultType="_int">
		select class_curr_nop as classCurrNop
		from cooking_class 
		where class_no=#{classNo}
	</select>
	
	<!-- 쿠킹클래스 햔재 인원수 증가 -->
	<update id="incCookingClsNop" parameterType="_int">
		update cooking_class set class_curr_nop=class_curr_nop+1 where class_no=#{classNo}
	</update>
	
	<!-- 쿠킹클래스 햔재 인원수 감소 -->
	<update id="decCookingClsNop" parameterType="_int">
		update cooking_class set class_curr_nop=class_curr_nop-1 where class_no=#{classNo}
	</update>
	
	<!-- 클래스 개설자 닉네임 dm에 사용 -->
	<select id="selectOneNickname" parameterType="_int" resultType="String">
		select
			member_nickname as memberNickname
		from cooking_class
		where class_no=#{classNo}
	</select>
	
	<!-- 클래스 등록 -->
	<insert id="insertCookingCls" parameterType="ccls">
		insert into cooking_class values(
			class_seq.nextval, #{memberNickname}, #{classTitle}, #{classContent}, #{classStart}, #{classEnd}, #{classPrice}, 0, #{classNop}, 0, 1, to_char(sysdate, 'YYYY-MM-DD'), #{classStartTime}, #{classEndTime}, #{classLocation1}, #{classLocation2}, #{classThumbnailFilename}, #{classThumbnailFilepath}
		)
		
	</insert>

	
	<!-- 파일 등록 -->
	<insert id="insertFile" parameterType="ccpvo">
		insert into cooking_class_pic values(
			class_pic_seq.nextval, #{classFileNo}, #{classNo}, #{classFilename}, {classFilepath}
		)
	</insert>
	
	<!-- 클래스 수정 -->
	<update id="updateCookingCls" parameterType="ccls">
		update cooking_class 
		set class_title=#{classTitle}, class_content=#{classContent}, class_start=#{classStart}, class_end=#{classEnd}, class_price=#{classPrice}, class_nop=#{classNop}, class_start_time=#{classStartTime}, class_end_time=#{classEndTime}, class_location1=#{classLocation1}, class_location2=#{classLocation2}, class_thumbnail_filename=#{classThumbnailFilename}, class_thumbnail_filepath=#{classThumbnailFilepath}
		where class_no=#{classNo}
	</update>
	
	<!-- 평균점수변경 -->
	<update id="updateReviewAvgRate" parameterType="_int">
		update cooking_class 
		set class_rate=(select nvl(trunc(avg(review_rate), 1), 0) 
						from review 
						where class_no=#{classNo}
						)
		where class_no=#{classNo}
	</update>
	
</mapper>
